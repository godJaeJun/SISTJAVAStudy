/*==========================================================
			 ■■■ 클래스와 인스턴스 ■■■
				- 클래스와 인스턴스 활용
0==========================================================*/ 
// ○ 실습 문제
// 학생 별로 국어점수, 영어점수, 수학점수를 입력받아
// 총점, 평균을 산출하는 프로그램을 구현한다.
// 단, 클래스의 개념을 활용하여 작성할 수 있도록 한다.
// 또한, 이 과정에서 배열을 적극적으로 활용할 수 있도록 한다.
// 마지막으로, 다음의 요구사항을 충족할 수 있도록 설계한다.

// 프로그램을 구성하는 클래스
// 1. Record 클래스
//    - 속성만 존재하는 클래스로 설계할 것~!!!
// 2. Sungjuck 클래스
//    - 인원수를 입력받아, 입력받은 인원 수 만큼
//      이름, 국어점수, 영어점수, 수학점수를 입력받고
//      총점과 평균을 산출하는 클래스로 설계할 것~!!!
//    - 속성 : 인원수, Record 형태의 배열
//    - 기능 : 인원수 입력, 상세 데이터 입력, 총점/평균 산출, 결과 출력
// 3. Test093 클래스
//    - main() 메소드가 존재하는 외부의 다른 클래스로 설계할 것~!!!

// 실행 예)
// 인원수 입력(1~100) : 102
// 인원수 입력(1~100) : -10
// 인원수 입력(1~100) : 3
// 1번째 학생의 이름 입력 : 김정규
// 국어 점수 : 90
// 영어 점수 : 80
// 수학 점수 : 70
// 2번째 학생의 이름 입력 : 김성희
// 국어 점수 : 82
// 영어 점수 : 72
// 수학 점수 : 62
// 3번째 학생의 이름 입력 : 김선아
// 국어 점수 : 98
// 영어 점수 : 88
// 수학 점수 : 78

// 김정규 90 80 70 240 xx.xx 2
// 김정규 82 72 62 xxx xx.xx 2
// 김정규 98 88 78 xxx xx.xx 2
import java.util.Scanner;
public class Test093
{
	public static void main(String[] args)
	{
		/*
		Sungjuck s =new Sungjuck();
		s.pInput();
		s.sInput();
		s.sa();
		s.print();
		*/
		Sungjuck2 ob = new Sungjuck2();
		ob.set();
		ob.input();
		ob.print();
	}
}
//실행 결과
/*
인원 수 입력(1~100) : 3
1번째 학생의 이름 입력 : 이재준
국어 점수 : 90
영어 점수 : 80
수학 점수 : 100
2번째 학생의 이름 입력 : 이이이
국어 점수 : 100
영어 점수 : 50
수학 점수 : 40
3번째 학생의 이름 입력 : 으으으
국어 점수 : 100
영어 점수 : 100
수학 점수 : 10

  이재준  90  80 100  270 90.00    1
  이이이 100  50  40  190 63.33    3
  으으으 100 100  10  210 70.00    2
계속하려면 아무 키나 누르십시오 . . .
*/ 